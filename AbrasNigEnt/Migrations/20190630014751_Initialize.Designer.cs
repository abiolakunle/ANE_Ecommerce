// <auto-generated />
using System;
using AbrasNigEnt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AbrasNigEnt.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190630014751_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId");

                    b.Property<string>("CategoryName");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("CategoryId");

                    b.HasIndex("BrandId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("MachineTypeId");

                    b.Property<string>("ModelName");

                    b.Property<int?>("SectionGroupId");

                    b.Property<int?>("SectionId");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("MachineId");

                    b.HasIndex("BrandId");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("SectionGroupId");

                    b.HasIndex("SectionId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.MachineType", b =>
                {
                    b.Property<int>("MachineTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("MachineTypeName");

                    b.HasKey("MachineTypeId");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Detail");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("PartNumber");

                    b.Property<decimal>("Price");

                    b.Property<string>("Quantity");

                    b.Property<string>("Remarks");

                    b.Property<int?>("SectionGroupId");

                    b.Property<int?>("SectionId");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SectionGroupId");

                    b.HasIndex("SectionId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("MachineId");

                    b.Property<string>("SectionName");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("SectionId");

                    b.HasIndex("BrandId");

                    b.HasIndex("MachineId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.SectionGroup", b =>
                {
                    b.Property<int>("SectionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("MachineId");

                    b.Property<string>("SectionGroupName");

                    b.Property<int>("SectionId");

                    b.Property<string>("ThumbUrl");

                    b.HasKey("SectionGroupId");

                    b.HasIndex("BrandId");

                    b.HasIndex("MachineId");

                    b.HasIndex("SectionId");

                    b.ToTable("SectionGroups");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Category", b =>
                {
                    b.HasOne("AbrasNigEnt.Data.Models.Brand")
                        .WithMany("Categories")
                        .HasForeignKey("BrandId");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Machine", b =>
                {
                    b.HasOne("AbrasNigEnt.Data.Models.Brand", "Brand")
                        .WithMany("Machines")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigEnt.Data.Models.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId");

                    b.HasOne("AbrasNigEnt.Data.Models.SectionGroup")
                        .WithMany("Machines")
                        .HasForeignKey("SectionGroupId");

                    b.HasOne("AbrasNigEnt.Data.Models.Section")
                        .WithMany("Machines")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Product", b =>
                {
                    b.HasOne("AbrasNigEnt.Data.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigEnt.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AbrasNigEnt.Data.Models.SectionGroup", "SectionGroup")
                        .WithMany("Products")
                        .HasForeignKey("SectionGroupId");

                    b.HasOne("AbrasNigEnt.Data.Models.Section", "Section")
                        .WithMany("Products")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.Section", b =>
                {
                    b.HasOne("AbrasNigEnt.Data.Models.Brand")
                        .WithMany("Sections")
                        .HasForeignKey("BrandId");

                    b.HasOne("AbrasNigEnt.Data.Models.Machine")
                        .WithMany("Sections")
                        .HasForeignKey("MachineId");
                });

            modelBuilder.Entity("AbrasNigEnt.Data.Models.SectionGroup", b =>
                {
                    b.HasOne("AbrasNigEnt.Data.Models.Brand")
                        .WithMany("SectionGroups")
                        .HasForeignKey("BrandId");

                    b.HasOne("AbrasNigEnt.Data.Models.Machine")
                        .WithMany("SectionGroups")
                        .HasForeignKey("MachineId");

                    b.HasOne("AbrasNigEnt.Data.Models.Section", "Section")
                        .WithMany("SectionGroups")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
